
dnl -*- m4 -*-
dnl Process this file with autoconf to produce a configure script.

AC_REVISION($Id: configure.in,v 1.7 2005/05/06 22:14:28 pwest Exp $)

AC_INIT(fits_handler.cc)
AC_CONFIG_HEADER(config_fits.h)
AC_CONFIG_AUX_DIR(../etc)

AC_PREFIX_DEFAULT("${OPENDAP_ROOT}")

dnl I think that the new dir naming scheme obviates this... 6/5/98 jhrg
dnl the variable `dir' is used as a basename for the directory tar file

# check for fits version
AC_DEFUN(FITS_DIRECTORY_VERSION, [dnl
    AC_MSG_CHECKING([version])
    VERSION=`cat version.h`
    AC_MSG_RESULT($VERSION)
    AC_SUBST(VERSION)])

FITS_DIRECTORY_VERSION
FITS_VERSION="OPeNDAP Fits Handler/$VERSION"
AC_DEFINE_UNQUOTED(FITS_VERSION, "$FITS_VERSION", [Fits Version])
AC_SUBST(FITS_VERSION)

depend=${DODS_ROOT}/etc/depend.sh
AC_SUBST(depend)

dnl flags for the compilers and linkers - set these before locating the
dnl actual tools since some of the AC_PROG macros set these `flag variables'
dnl to default values otherwise.

AC_CANONICAL_HOST
AC_SUBST(host)

# Until further notice OS X port doesn't get -gstabs because of an
# apparent bug in their gcc 3.3 clone (a beta).  If you see this after
# 1/1/2005, you can probably remove it.
case "${host_cpu}:${host_vendor}:${host_os}" in
     powerpc:apple:netbsd*)
       CFLAGS=${CFLAGS-"-O2 $CFLAGS"}
       CXXFLAGS=${CXXFLAGS-"-O2 $CXXFLAGS"}
       break;;
     alphaev56:dec:osf5.*)
       CFLAGS=${CFLAGS-"-O2 $CFLAGS"}
       CXXFLAGS=${CXXFLAGS-"-O2 $CXXFLAGS"}
       break;;
    *:*:*)
       CFLAGS=${CFLAGS-"-gstabs -O2 $CFLAGS"}
       CXXFLAGS=${CXXFLAGS-"-gstabs -O2 $CXXFLAGS"}
       break;;
esac


dnl You should have g++, but you can override that with an environment
dnl variable. 

CXX=${CXX-g++}
AC_MSG_RESULT(Setting CXX to $CXX)
AC_SUBST(CXX)

AC_PROG_CC
AC_PROG_CXX
AC_PROG_RANLIB
AC_PROG_MAKE_SET
AC_PROG_INSTALL

AC_CHECK_PROG(VALGRIND, valgrind, [valgrind --logfile=memcheck])

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h limits.h unistd.h pthread.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_TYPE_SIZE_T

dnl Checks for library functions.
AC_FUNC_ALLOCA
AC_CHECK_FUNCS(strdup strftime timegm mktime)

# check for opendap-g daemon libraries, not in usual location
AC_DEFUN(DAEMON_PACKAGE, [dnl
    AC_ARG_WITH(daemon,
        [  --with-daemon=ARG          Where is the local opendap-g daemon library sources (directory)],
        DAEMON_PATH=${withval}, DAEMON_PATH="$OPENDAP_ROOT")
    if test ! -d "$DAEMON_PATH"
    then
	AC_MSG_ERROR([Could not find opendap-g daemon library])
    else
	INCS="$INCS -I${DAEMON_PATH}/include/opendap-g"
	LIBS="$LIBS -L${DAEMON_PATH}/lib -ldispatch"
	MODS="$MODS ${DAEMON_PATH}/lib/dods_module.o ${DAEMON_PATH}/lib/test_authenticator.o"
	AC_SUBST(INCS)
	AC_SUBST(LIBS)
	AC_SUBST(MODS)
    fi])

DAEMON_PACKAGE

# check for dap libraries, not in usual location
AC_DEFUN(FITS_DAP, [dnl
    AC_ARG_WITH(dap,
        [  --with-dap=ARG       Where is the external dap sources (directory)],
        DAP_PATH=${withval}, DAP_PATH="${OPENDAP_ROOT}")

        LIBS="$LIBS `$DAP_PATH/bin/dap-config --libs`"
	INCS="$INCS `$DAP_PATH/bin/dap-config --cflags`"
	CXXFLAGS="$CXXFLAGS -DDEFAULT_BASETYPE_FACTORY"

	AC_SUBST(INCS)
	AC_SUBST(LIBS)
	AC_SUBST(CXXFLAGS)
    ])

FITS_DAP

# check for cfitsio libraries, not in usual location
AC_DEFUN(CHECK_CFITSIO, [dnl
    AC_ARG_WITH(cfits,
        [  --with-cfits=ARG       Where is the external cfits sources (directory)],
        CFITS_PATH=${withval}, CFITS_PATH="/usr/local")

        LIBS="-L$CFITS_PATH/lib -lcfitsio $LIBS"
	INCS="-I$CFITS_PATH/include/cfitsio $INCS"

	AC_SUBST(INCS)
	AC_SUBST(LIBS)
    ])

CHECK_CFITSIO

dnl autoheader macros; tack some text at the top and bottom of config_dap.h.in

AH_TOP([#ifndef _config_dap_h
#define _config_dap_h])

AH_BOTTOM([/* Shorthand for gcc's unused attribute feature */
#if defined(__GNUG__) || defined(__GNUC__)
#define not_used __attribute__ ((unused))
#else
#define not_used 
#endif /* __GNUG__ || __GNUC__ */

#endif /* _config_dap_h */])

AC_OUTPUT(Makefile)
